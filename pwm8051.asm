;ALGORITMO FEITO POR ESAÚ CARVALHO PARA CONTROLAR
;VELOCIDADE DE MOTORES ELÉTRICOS COM MCU INTEL 8051
;E MODULAÇÃO POR LARGURA DE PULSO (PWM)
;A PORTA P2.0 É USADA PARA O CONTROLE PWM.

      DUTY_CYCLE EQU R0

ORG   0000h

      SJMP INIT
ORG 0Bh
      LJMP TIMER_0
      
      SJMP $

INIT:
      MOV DUTY_CYCLE, #20

      ;CONFIGURAÇÕES DO TIMER
      SETB EA
      SETB ET0
      
      ;CONFIGURAÇÕES DO CANAL SERIAl/TIMER
      MOV TMOD, #00100001b
      
      ;TIMER PWM
      MOV TL0, #LOW(65535-10)
      MOV TH0, #HIGH(65535-10)

      
      SETB TR0 ;INICIA O TIMER PWM
      
      CALL INIT_SERIAL
      
      MOV DPTR, #TEXTO2
      CALL ENVIA_TEXTO
      MOV DPTR, #TEXTO3
      CALL ENVIA_TEXTO
      MOV DPTR, #TEXTO1
      CALL ENVIA_TEXTO
      
      lp:
      CALL RECEBE_BYTE
      
      MOV B, A
      CALL PROCESSAR_ENTRADA
      ;CALL UPDATE_DUTY
      CALL ENVIA_BYTE
      
      MOV P1, B
      
      SJMP lp

      
;------------------------CONFIGURAÇÕES DO CANAL SERIAL----------------------;
INIT_SERIAL:
      ;Frequencia do clock: 11.0592MHz
      MOV SCON, #11010000B
      MOV TH1, #0FDh
      MOV TH0, #0FDh
     ;;ORL PCON, #10000000b
      SETB TR1
      RET



RECEBE_BYTE:
      JNB RI, $
      MOV A, SBUF
      CLR RI
      RET

ENVIA_BYTE:
      MOV SBUF, B
      JNB TI, $
      CLR TI
      RET
      
ENVIA_TEXTO:
      CLR A
      MOVC A, @A+DPTR
      JZ SAI_1
      MOV B, A
      CALL ENVIA_BYTE
      INC DPTR
      SJMP ENVIA_TEXTO
SAI_1:  RET


;--------------------------TABELA COM TEXTOS DO MENU-----------------------------------------------;
TEXTO1: DB 0Dh, 0Ah, 'ENTRE COM O DUTY CYCLE:', 0Dh, 0Ah, 0
TEXTO2: DB '| 1 - 10%, 2 - 20%, 3 - 30%, 4 - 40%, 5 - 50%  |', 0Dh, 0Ah, 0
TEXTO3: DB '| 6 - 60%, 7 - 70%, 8 - 80%, 9 - 90%, M - 100% |', 0Dh, 0Ah, 0
;--------------------------------------------------------------------------------------------------;


PROCESSAR_ENTRADA:
      
      ;Rotina Verifica Acumulador (entrada serial) e seta registrador duty cycle de acordo
      ;se A == M Duty_cycle = 100 (%)
      
      CJNE A, #'M', CHECK9 ;**M maiusculo**
      MOV DUTY_CYCLE, #100 ;%
      CALL UPDATE_DUTY
      RET
      
CHECK9:
      CJNE A, #'9', CHECK8
      MOV DUTY_CYCLE, #90; %
      CALL UPDATE_DUTY
      RET
      
CHECK8:
      CJNE A, #'8', CHECK7
      MOV DUTY_CYCLE, #80; %
      CALL UPDATE_DUTY
      RET
CHECK7:
      CJNE A, #'7', CHECK6
      MOV DUTY_CYCLE, #70
      CALL UPDATE_DUTY
      RET
CHECK6:
      CJNE A, #'6', CHECK5
      MOV DUTY_CYCLE, #60
      CALL UPDATE_DUTY
      RET
CHECK5:
      CJNE A, #'5', CHECK4
      MOV DUTY_CYCLE, #50
      CALL UPDATE_DUTY
      RET
CHECK4:
      CJNE A, #'4', CHECK3
      MOV DUTY_CYCLE, #40
      CALL UPDATE_DUTY
      RET
CHECK3:
      CJNE A, #'3', CHECK2
      MOV DUTY_CYCLE, #30
      CALL UPDATE_DUTY
      RET
CHECK2:
      CJNE A, #'2', CHECK1
      MOV DUTY_CYCLE, #20
      CALL UPDATE_DUTY
      RET
CHECK1:
      CJNE A, #'1', CHECK0
      MOV DUTY_CYCLE, #10
      CALL UPDATE_DUTY
      RET
CHECK0:
      CJNE A, #'0', SAI_2
      MOV DUTY_CYCLE, #00
      CALL UPDATE_DUTY

SAI_2:RET

;--------------------------------------------------------------------------------------------------;
;-------------------------- APLICAÇÃO DA MODULAÇÃO POR LARGURA DE PULSO----------------------------;
;--------------------------------------------------------------------------------------------------;

      
TIMER_0:

      CALL UPDATE_DUTY
      
      JB TR0, EXT ;VERIFICA SE O CONTADOR ESTÁ DESLIGADO
      CJNE DUTY_CYCLE, #00, CMP100 ;SE DutyC FOR = 0, TIMER PERMANECE DESLIGADO
      SJMP EXT
      
      CMP100:
      CJNE DUTY_CYCLE, #100, LIGA_TIMER ;SE DutyC FOR = 100, TIMER PERMANECE DESLIGADO
      SJMP EXT
      
LIGA_TIMER:
      SETB TR0 ; SE NAO FOR NEM 0 NEM 100 LIGA O TIMER
EXT:
RETI

UPDATE_DUTY:

      ;ROTINA PARA ATUALIZAR A ONDA
      ;P2.0 É O PORT QUE ACIONA O MOTOR
      ;LARGURA TOTAL DO PULSO = 10.000 
CHECK100: 
      CJNE DUTY_CYCLE, #100, CHECK90
      CLR TR0 ;SE ESTA 100% DESLIGA TIMER
      SETB P2.0
      RET
CHECK90:
      CJNE DUTY_CYCLE, #90, CHECK80 ;SE DUTY CYCLE NAO FOR = 90, PULA PRO PROXIMO
      
      JB P2.0, HIGH_90 ;VERIFICA SE PULSO ESTÁ ALTO OU BAIXO
      
	    MOV TL0, #LOW(65535-9000) ;SE ESTIVER BAIXO, CARREGA O TIMER COM 90000 E P2.0 FICA ALTO  
	    MOV TH0, #HIGH(65535-9000)
	    SETB P2.0
	    SETB TR0 ;LIGA O TIMER SEMPRE ! (SE DC ESTIVER EM 0% OU 100% ANTES, VAI ESTAR DESLIGADO)
	    RET
      HIGH_90:
	    MOV TL0, #LOW(65535-1000) ;SE ESTIVER ALTO, CARREGA O TIMER COM 10000 E P2.0 FICA BAIXO
	    MOV TH0, #HIGH(65535-1000)
	    CLR P2.0
	    SETB TR0
	    RET
	    
CHECK80:
      CJNE DUTY_CYCLE, #80, CHECK70 ;SE DUTY CYCLE NAO FOR = 80, PULA PRO PROXIMO
      
      JB P2.0, HIGH_80 ;VERIFICA SE PULSO ESTÁ ALTO OU BAIXO
      
	    MOV TL0, #LOW(65535-8000) ;SE ESTIVER BAIXO, CARREGA O TIMER COM 80000 E P2.0 FICA ALTO  
	    MOV TH0, #HIGH(65535-8000)
	    SETB P2.0
	    SETB TR0
	    RET
      HIGH_80:
	    MOV TL0, #LOW(65535-2000) ;SE ESTIVER ALTO, CARREGA O TIMER COM 20000 E P2.0 FICA BAIXO
	    MOV TH0, #HIGH(65535-2000)
	    CLR P2.0
	    SETB TR0
	    RET


CHECK70:
      CJNE DUTY_CYCLE, #70, CHECK60 ;SE DUTY CYCLE NAO FOR = 70, PULA PRO PROXIMO
      
      JB P2.0, HIGH_70 ;VERIFICA SE PULSO ESTÁ ALTO OU BAIXO
      
	    MOV TL0, #LOW(65535-7000) ;SE ESTIVER BAIXO, CARREGA O TIMER COM 70000 E P2.0 FICA ALTO  
	    MOV TH0, #HIGH(65535-7000)
	    SETB P2.0
	    SETB TR0
	    RET
      HIGH_70:
	    MOV TL0, #LOW(65535-3000) ;SE ESTIVER ALTO, CARREGA O TIMER COM 30000 E P2.0 FICA BAIXO
	    MOV TH0, #HIGH(65535-3000)
	    CLR P2.0
	    SETB TR0
	    RET
CHECK60:
      CJNE DUTY_CYCLE, #60, CHECK50 ;SE DUTY CYCLE NAO FOR = 60, PULA PRO PROXIMO
      
      JB P2.0, HIGH_60 ;VERIFICA SE PULSO ESTÁ ALTO OU BAIXO
      
	    MOV TL0, #LOW(65535-6000) ;SE ESTIVER BAIXO, CARREGA O TIMER COM 60000 E P2.0 FICA ALTO  
	    MOV TH0, #HIGH(65535-6000)
	    SETB P2.0
	    SETB TR0
	    RET
      HIGH_60:
	    MOV TL0, #LOW(65535-4000) ;SE ESTIVER ALTO, CARREGA O TIMER COM 40000 E P2.0 FICA BAIXO
	    MOV TH0, #HIGH(65535-4000)
	    CLR P2.0
	    SETB TR0
	    RET
CHECK50:

      CJNE DUTY_CYCLE, #50, CHECK40 ;SE DUTY CYCLE NAO FOR = 50, PULA PRO PROXIMO
      
      JB P2.0, HIGH_50 ;VERIFICA SE PULSO ESTÁ ALTO OU BAIXO
      
	    MOV TL0, #LOW(65535-5000) ;SE ESTIVER BAIXO, CARREGA O TIMER COM 50 E P2.0 FICA ALTO  
	    MOV TH0, #HIGH(65535-5000)
	    SETB P2.0
	    SETB TR0
	    RET
      HIGH_50:
	    MOV TL0, #LOW(65535-5000) ;SE ESTIVER ALTO, CARREGA O TIMER COM 50 E P2.0 FICA BAIXO
	    MOV TH0, #HIGH(65535-5000)
	    CLR P2.0
	    SETB TR0
	    RET
CHECK40:

      CJNE DUTY_CYCLE, #40, CHECK30 ;SE DUTY CYCLE NAO FOR = 40, PULA PRO PROXIMO
      
      JB P2.0, HIGH_40 ;VERIFICA SE PULSO ESTÁ ALTO OU BAIXO
      
	    MOV TL0, #LOW(65535-4000) ;SE ESTIVER BAIXO, CARREGA O TIMER COM 40 E P2.0 FICA ALTO  
	    MOV TH0, #HIGH(65535-4000)
	    SETB P2.0
	    SETB TR0
	    RET
      HIGH_40:
	    MOV TL0, #LOW(65535-6000) ;SE ESTIVER ALTO, CARREGA O TIMER COM 60 E P2.0 FICA BAIXO
	    MOV TH0, #HIGH(65535-6000)
	    CLR P2.0
	    SETB TR0
	    RET
	   
CHECK30:

      CJNE DUTY_CYCLE, #30, CHECK20 ;SE DUTY CYCLE NAO FOR = 30, PULA PRO PROXIMO
      
      JB P2.0, HIGH_30 ;VERIFICA SE PULSO ESTÁ ALTO OU BAIXO
      
	    SETB P2.0
	    MOV TL0, #LOW(65535-3000) ;SE ESTIVER BAIXO, CARREGA O TIMER COM 30 E P2.0 FICA ALTO  
	    MOV TH0, #HIGH(65535-3000)
	    SETB TR0
	    RET
      HIGH_30:
	    CLR P2.0
	    MOV TL0, #LOW(65535-7000) ;SE ESTIVER ALTO, CARREGA O TIMER COM 70 E P2.0 FICA BAIXO
	    MOV TH0, #HIGH(65535-7000)
	    SETB TR0
	    RET
CHECK20:

      CJNE DUTY_CYCLE, #20, CHECK10 ;SE DUTY CYCLE NAO FOR = 20, PULA PRO PROXIMO
      
      JB P2.0, HIGH_20 ;VERIFICA SE PULSO ESTÁ ALTO OU BAIXO
      
	    MOV TL0, #LOW(65535-2000) ;SE ESTIVER BAIXO, CARREGA O TIMER COM 20 E P2.0 FICA ALTO  
	    MOV TH0, #HIGH(65535-2000)
	    SETB TR0
	    SETB P2.0
	    RET
      HIGH_20:
	    MOV TL0, #LOW(65535-8000) ;SE ESTIVER ALTO, CARREGA O TIMER COM 80 E P2.0 FICA BAIXO
	    MOV TH0, #HIGH(65535-8000)
	    SETB TR0
	    CLR P2.0
	    RET
CHECK10:

      CJNE DUTY_CYCLE, #10, CHECK00 ;SE DUTY CYCLE NAO FOR = 10, PULA PRO PROXIMO
      
      JB P2.0, HIGH_10 ;VERIFICA SE PULSO ESTÁ ALTO OU BAIXO
      
	    MOV TL0, #LOW(65535-1000) ;SE ESTIVER BAIXO, CARREGA O TIMER COM 10 E P2.0 FICA ALTO  
	    MOV TH0, #HIGH(65535-1000)
	    SETB TR0
	    SETB P2.0
	    RET
      HIGH_10:
	    MOV TL0, #LOW(65535-9000) ;SE ESTIVER ALTO, CARREGA O TIMER COM 90 E P2.0 FICA BAIXO
	    MOV TH0, #HIGH(65535-9000)
	    SETB TR0
	    CLR P2.0
	    RET
 
CHECK00: ;SE DUTY CYCLE FOR 0
      CLR TR0 ;DESLIGA O TIMER
      CLR P2.0 ;DESLIGA O SINAL PWM
RET

END
